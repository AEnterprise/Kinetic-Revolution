buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        url "http://maven.amadornes.com/"
    }
}


ext.buildProps = file "gradle.properties"

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.version.mod}"
group = "info.aenterprise.kineticrevolution" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "KineticRevolution"

minecraft {
    version = "${config.version.forge}"
    runDir = "run"
    useDepAts = true
    mappings = "${config.version.mappings}"

    replace "@MODVERSION@", config.version.mod
}

dependencies {
    deobfCompile "mezz.jei:jei_${config.version.jei}"
    deobfCompile "mcp.mobius.waila:Waila:${config.version.waila}"
    deobfCompile "MCMultiPart:MCMultiPart:${config.version.mcmp}:universal"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
